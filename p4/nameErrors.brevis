///////////////////////////////////////////////////////////////////////////////
//                   ALL STUDENTS COMPLETE THESE SECTIONS
// Main Class File:  ast.java
// File:             nameErrors.brevis
// Semester:         CS536 Spring 2023
//
// Author:           Arun Balaji - abalaji7@wisc.edu
// CS Login:         abalaji
// Lecturer's Name:  Beck Hasti
// Lab Section:      002
//
//////////////////// PAIR PROGRAMMERS COMPLETE THIS SECTION ////////////////////
//
// Pair Partner:     Ryan Meeker
// Email:            rtmeeker@wisc.edu
// CS Login:         meeker
// Lecturer's Name:  Beck Hasti
// Lab Section:      002
//
//////////////////// STUDENTS WHO GET HELP FROM OTHER THAN THEIR PARTNER //////
//                   fully acknowledge and credit all sources of help,
//                   other than Instructors and TAs.
//
// Persons:          Identify persons by name, relationship to you, and email.
//                   Describe in detail the the ideas and help they provided.
//
// Online sources:   avoid web searches to solve your problems, but if you do
//                   search, be sure to include Web URLs and description of 
//                   of any information you find.
//////////////////////////// 80 columns wide //////////////////////////////////



integer testInt;
record Point testInt;

// nameError.brevis
integer x;
integer x; // Identifier multiply-declared

void v; // Non-function declared void

integer k;
void k; // Identifier multiply-declared + Non-function declared void

record Point pt; // Name of record type invalid

record Point (
    integer w;
    integer p;
    integer p; // Identifier multiply-declared
);

integer Point;
//record Point pt;

integer f(integer n, boolean n){ } //Identifier multiply declared


void g() {
    integer a;
    boolean a; // Identifier multiply-declared
    integer q;

    record Point p;
    p.l = a; // Record field name invalid

    a.test = 3; // Dot-access of non-record type

    q = u; // Identifier undeclared
}

void testUndeclaredIdent(){
	t = 13;
}


//if else
void ifElse(){
	integer dup;
	boolean trueOrFalse;
	if(trueOrFalse == true){
	
	} else {
		integer dup; //multiply decl
	}
}




